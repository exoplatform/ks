h1. Overview {anchor:id=KSref.ProfileProviderConfiguration.Overview}

Forum and FAQ applications are to show some information about posters. 
The way to retrieve that information is pluggable through the _ContactProvider_ component.

For public internet websites, users can provide personal information, such as personal email address and location. To enable, simply override the _ContactProvider_ component in your configuration.

h1. Configuration {anchor:id=KSref.ProfileProviderConfiguration.Configuration}
Configure the _profile-configuration.xml_ file as shown below:

{code:xml}
<component>
	<key>org.exoplatform.ks.common.user.ContactProvider</key>
	<type>org.exoplatform.ks.common.user.DefaultContactProvider</type>
</component>
{code}

h1.Use ContactProvider {anchor:id=KSref.ProfileProviderConfiguration.UseContactProvider}
When you start the Tomcat, the _DefaultContactProvider_ class will be initialized and the _OrganizationService_ component is set within the _DefaultContactProvider_ component.

The _DefaultContactProvider_ class enables you to get user information via the _OrganizationService_ component.
{code:java}
public CommonContact getCommonContact(String userId) {
	CommonContact contact = new CommonContact();
	try {
		User user = orgService.getUserHandler().findUserByName(userId);
		UserProfile profile = orgService.getUserProfileHandler().findUserProfileByName(userId);
		contact.setEmailAddress(user.getEmail());
		contact.setFirstName(user.getFirstName());
		contact.setLastName(user.getLastName());
		if(profile.getUserInfoMap() != null) {
			contact.setAvatarUrl(profile.getAttribute("user.other-info.avatar.url"));
			contact.setBirthday(profile.getAttribute("user.bdate"));
			contact.setCity(profile.getAttribute("user.home-info.postal.city"));
			contact.setCountry(profile.getAttribute("user.home-info.postal.country"));
			contact.setGender(profile.getAttribute("user.gender"));
			contact.setJob(profile.getAttribute("user.jobtitle"));
			contact.setMobile(profile.getAttribute("user.home-info.telecom.mobile.number"));
			contact.setPhone(profile.getAttribute("user.business-info.telecom.telephone.number"));
			contact.setWebSite(profile.getAttribute("user.home-info.online.uri"));
		}
	} catch (Exception e) {
		log.error("Could not retrieve forum user profile for " + userId + ": " ,e);
	}
	return contact;
}
{code}

- The information which is get by the user includes:

||Name || Type || Description ||
| *email* |{{String}}| The email of the user. |
| *firstName* |{{String}}|The first name of the user. |
| *lastName* |{{String}}|The last name of the user. |

- The information which is get via _UserProfile_ includes:

|| Attribute || Type || Description ||
| *user.other-info.avatar.url* | {{String}} | The path containing the user's avatar. |
| *user.bdate* | {{String}} | The user's birthday. |
| *user.home-info.postal.city* | {{String}} | The home city of the user. |
| *user.home-info.postal.country* | {{String}} | The home country of the user. |
| *user.gender* | {{String}} | The user's gender.|
| *user.jobtitle* | {{String}} | The user's job. |
| *user.home-info.telecom. mobile.number* | {{String}} | The home phone number of the user. |
| *user.business-info.telecom. telephone.number* | {{String}} | The mobile number of the user. |
| *user.home-info.online.uri* | {{String}} | The individual websites of the user. |

- You can get the _ContactProvider_ as follows:

{code:java}
public CommonContact getPersonalContact(String userId) throws Exception {
	try {
		if(userId.indexOf(Utils.DELETED) > 0) return new CommonContact();
		ContactProvider provider = (ContactProvider) PortalContainer.getComponent(ContactProvider.class) ;
		return provider.getCommonContact(userId);
	}catch (Exception e) {
		return new CommonContact();
	}
}
{code}




